name: common-provision
run-name: (${{ github.actor }}${{ format('{0}{1}', inputs.remote_source && '-' || '', inputs.remote_source && inputs.remote_source || '' ) }}-${{ inputs.environment }}-${{ inputs.mode }}-${{ inputs.tenant }}) Common Infrastructure Common via Terraform
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        type: environment
        required: true
      mode:
        type: choice
        required: true
        description: 'Terraform Mode'
        options:
          - validate
          - plan
          - apply
          - destroy
          - plan-destroy
      remote_source:
        description: 'Remote source'
        type: string
        required: false
## Permisos del token
permissions: 
  contents: write
  pull-requests: write
  packages: read
  id-token: write

env:
  TERRAFORM_AUTO_TFVARS_FILENAME: "common-infrastructure.auto.tfvars"
  WORKING_DIRECTORY: "./azure/workflows/common"
jobs:
  setup-commmon-infrastructure:
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'ftdslabs' }}
    runs-on: ubuntu-latest
    name: "Common Infrastructure Terraform Variables"
    outputs:
      environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'ftdslabs' }}
      working-directory: ${{ env.WORKING_DIRECTORY }}
      tf-state-name: ${{ format('{0}-common-infrastructure.tfstate', vars.ENV_PREFIX) }}
      mode:  ${{ inputs.mode }}
      vars-file: ${{ steps.vars.outputs.vars_file }}
      steps:
        echo "test"

  #     - name: "Checkout Repository"
  #       uses: actions/checkout@v4

  #     - name: "SetUp Common Infrastructure Terraform Variables"
  #       working-directory: ${{ env.WORKING_DIRECTORY }}
  #       # ID--> identificar el job posteriores "si es un step "step.vars"
  #       #  -- Syntaxis para enviar un valor --- (>> "${GITHUB_OUTPUT}" )
  #       # *** --> sirve para incriptar o se puede reemplazar
  #       id: vars
  #       run: |
  #         delimiter="$(openssl rand -hex 8)"
  #         echo "vars_file<<${delimiter}" >> "${GITHUB_OUTPUT}"
        
  #         echo "tfstate_storage_account_name = ***${{ vars.TF_STATE_SA }}***" >> "${GITHUB_OUTPUT}"
  #         echo "tfstate_container_name = ***${{ vars.TF_STATE_CONTAINER }}***" >> "${GITHUB_OUTPUT}"
  #         echo "tfstate_resource_group_name = ***${{ vars.TF_STATE_RG }}***" >> "${GITHUB_OUTPUT}"
  #         echo "tfstate_name = ***${{ format('{0}-common-infrastructure.tfstate', vars.ENV_PREFIX) }}***" >> "${GITHUB_OUTPUT}"
  #         echo "tfstate_subscription_id = ***${{ vars.TF_STATE_SUB }}***" >> "${GITHUB_OUTPUT}"

  #         echo "${delimiter}" >> "${GITHUB_OUTPUT}"

  # common-infrastructure:
  #   needs: [setup-commmon-infrastructure]
  #   uses: ./.github/workflows/terraform-reusable-workflow.yaml
  #   name: "Common Infrastructure Terraform"
  #   with: 
  #     workflow: ${{ needs.setup-common-infrastructure.outputs.working-directory }}
  #     mode: ${{ needs.setup-common-infrastructure.outputs.mode }}
  #     vars-file: ${{ needs.setup-common-infrastructure.outputs.vars-file }}
  #     tf-state-name: ${{ needs.setup-common-infrastructure.outputs.tf-state-name }}
  #     #tf-state-name: "terraform.tfstate"
  #     environment: ${{ needs.setup-common-infrastructure.outputs.environment }}
  #     publish-plan-on-pr: ${{ github.event_name == 'pull_request' }}
  #   secrets: inherit
